version: '3'
services:
  opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:2.6.0
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligibile to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms2048m -Xmx2048m" # Set min and max JVM heap sizes to at least 50% of system RAM
#      - openid_auth_domain.http_enabled=true
#      - openid_auth_domain.transport_enabled=true
#      - openid_auth_domain.order=0
#      - openid_auth_domain.http_authenticator.type=openid
#      - openid_auth_domain.http_authenticator.challenge=false
#      - openid_auth_domain.http_authenticator.config.subject_key=preferred_username
#      - openid_auth_domain.http_authenticator.config.roles_key=roles
#      - openid_auth_domain.http_authenticator.config.openid_connect_url=http://local_keycloak:8080/auth/realms/master/.well-known/openid-configuration
#      - openid_auth_domain.authentication_backend.type=noop
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-node2:
    image: opensearchproject/opensearch:2.6.0 # This should be the same image used for opensearch-node1 to avoid issues
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms2048m -Xmx2048m"
#     - openid_auth_domain.http_enabled=true
#     - openid_auth_domain.transport_enabled=true
#     - openid_auth_domain.order=0
#     - openid_auth_domain.http_authenticator.type=openid
#     - openid_auth_domain.http_authenticator.challenge=false
#     - openid_auth_domain.http_authenticator.config.subject_key=preferred_username
#     - openid_auth_domain.http_authenticator.config.roles_key=roles
#     - openid_auth_domain.http_authenticator.config.openid_connect_url=http://local_keycloak:8080/auth/realms/master/.well-known/openid-configuration
#     - openid_auth_domain.authentication_backend.type=noop
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
    networks:
      - opensearch-net
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.6.0 # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    #environment:
    #  OPENSEARCH_HOSTS: '["https://opensearch-node1:9200","https://opensearch-node2:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query 
    environment:
      - OPENSEARCH_HOSTS=["https://opensearch-node1:9200","https://opensearch-node2:9200"]
#      - opensearch_security.auth.type=openid
#      - opensearch_security.openid.connect_url=http://local_keycloak:8080/auth/realms/master/.well-known/openid-configuration
#      - opensearch_security.openid.client_id=opensearch
#      - opensearch_security.openid.client_secret=3462e636-620f-4d27-8a11-3af99de0b88e
#      - opensearch.ssl.verificationMode=none
#      - opensearch.requestHeadersAllowlist=["Authorization", "security_tenant"]
    networks:
      - opensearch-net

  postgres:
    image: postgres:13.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRESQL_DB}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}
    networks:
      - opensearch-net

  keycloak:
    depends_on:
      - postgres
    container_name: local_keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: ${POSTGRESQL_DB}
      DB_USER: ${POSTGRESQL_USER}
      DB_PASSWORD: ${POSTGRESQL_PASS}
    image: jboss/keycloak:${KEYCLOAK_VERSION}
    ports:
      - "28080:8080"
    restart: unless-stopped
    networks:
      - opensearch-net

volumes:
  opensearch-data1:
  opensearch-data2:

networks:
  opensearch-net:
  
  